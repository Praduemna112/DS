package queuepractice;

public class queue{
    int[] arr;
    int capacity;
    int rear;
    int front;
    int count=0;


public queue(int size){
    this.capacity=size;
    this.front=0;
    this.rear=-1;
    this.count=0;
    this.arr=new int[size];
}
public boolean isEmpty(){
    return (rear==-1);
}

public int size(){
    return count;
}
public boolean isfull(){
    return (size()==capacity);
}

public void push(int data){
    if(isfull()){
        System.out.println("queue is overflow");
    }else{
        rear=(rear+1)%capacity;
        arr[rear]=data;
        count++;
    }
}

public void pop() {
	if (isEmpty()) {
		System.out.println("queue is underflow");
	}else {
		front++;
	}
	
}

public void display() {
	if(isEmpty()) {
		System.out.println("Queue is Empty");
	}else {
		for (int i=front;i<count;i++) {
			
			System.out.println(arr[i]);
		}
	}
}

public static void main(String []args){
    queue q1=new queue(5);
    q1.push(12);
    q1.push(13);
    q1.push(14);
    q1.push(15);
    q1.display();
    System.out.println();
    q1.pop();
    System.out.println();
    q1.display();
}
}

