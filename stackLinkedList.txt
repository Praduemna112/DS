package stackLinkedList;

public class stackeLinedList {
	    
	    public class Node{
	        Node next;
	        int data;
	        
	        public Node(int data){
	            this.next=null;
	            this.data=data;
	        }
	        
	    }
	    Node top;
	    int count;
	    
	    public stackeLinedList(){
	        this.top=null;
	        this.count=0;
	    }
	    
	    //check conditon is empty
	    public boolean isEmpty(){
	        return (top==null);
	    }
	    
	    //initilise size
	    public int size(){
	        return count;
	    }
	    
	    //add method
	    public void push(int data){
	        Node newnode=new Node(data);
	        if(top!=null){
	        newnode.next=top;
	        }
	        top=newnode;
	        count++;
	        
	    }
	    
	    //remove method
	    public int pop(){
	        if(isEmpty()){
	            System.out.println("Stack is UnderFlow");
	            return -1;
	        }else{
	            int key=top.data;
	            top=top.next;
	            count--;
	            return key;
	            
	        }
	    }
	    
	    //print 
	    public void print(){
	        if(isEmpty()){
	            System.out.println("Stack is empty"); 
	        }else{
	            Node trav=top;
	            while(trav!=null){
	                System.out.println(trav.data);
	                trav=trav.next;
	            }
	        }
	    }
	    
	    public static void main(String[] args){
	    	stackeLinedList s1=new stackeLinedList();
	        s1.push(5);
	        s1.push(4);
	        s1.push(2);
	        
	        s1.print();
	        s1.pop();
	        s1.pop();
	        System.out.println();
	        s1.print();
	    }
	    
	
}
